## NOTE: This schema was generated by Graphback and should not be changed manually

"""
@model
@crud.delete: false
@crud.update: false
@crud.findAll: false
@crud.find: false
"""
type Comment {
  """@db.primary"""
  _id: ObjectID!
  message: String!
  version: Int
  author: String!

  """@manyToOne field: 'comments', key: 'noteId'"""
  note: Task
}

input CommentInput {
  _id: ObjectID
  message: String
  version: Int
  author: String
  noteId: ObjectID
}

scalar DateTime

scalar JSON

type Mutation {
  createTask(input: TaskInput): Task!
  updateTask(input: TaskInput): Task!
  deleteTask(input: TaskInput): Task!
  createComment(input: CommentInput): Comment!
}

scalar ObjectID

type Query {
  findAllTasks(limit: Int, offset: Int): [Task]!
  findTasks(fields: TaskInput, limit: Int, offset: Int): [Task]!
}

type Subscription {
  newTask(input: TaskInput): Task!
  updatedTask(input: TaskInput): Task!
  deletedTask(input: TaskInput): Task!
  newComment(input: CommentInput): Comment!
}

"""@model"""
type Task {
  """@db.primary"""
  _id: ObjectID!
  title: String!
  description: String!
  version: Int
  status: TaskStatus
  type: String
  priority: Int
  public: Boolean
  startDate: DateTime
  payload: JSON

  """@oneToMany field: 'note', key: 'noteId'"""
  comments: [Comment]!
}

input TaskInput {
  _id: ObjectID
  title: String
  description: String
  version: Int
  status: TaskStatus
  type: String
  priority: Int
  public: Boolean
  startDate: DateTime
  payload: JSON
}

enum TaskStatus {
  OPEN
  ASSIGNED
  COMPLETE
}